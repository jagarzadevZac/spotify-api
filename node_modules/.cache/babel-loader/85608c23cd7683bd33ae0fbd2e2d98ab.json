{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anton\\\\Downloads\\\\react-coding-challenges-master\\\\react-coding-challenges-master\\\\spootify\\\\src\\\\routes\\\\Discover\\\\components\\\\Discover.js\";\nimport React, { Component } from 'react';\nimport DiscoverBlock from './DiscoverBlock/components/DiscoverBlock';\nimport '../styles/_discover.scss';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Discover extends Component {\n  constructor() {\n    super();\n    this.state = {\n      newReleases: [],\n      playlists: [],\n      categories: []\n    };\n  }\n\n  componentDidMount() {\n    const country = 'MX';\n    const offset = 1;\n    const limit = 20;\n    const locale = \"sv_MX\";\n    const timestamp = \"2021-10-23T09%3A00%3A00.000Z\";\n    /* get token for spotify api */\n\n    axios('https://accounts.spotify.com/api/token', {\n      'method': 'POST',\n      'headers': {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': 'Basic ' + new Buffer(process.env.REACT_APP_SPOTIFY_CLIENT_ID + ':' + process.env.REACT_APP_SPOTIFY_CLIENT_SECRET).toString('base64')\n      },\n      data: 'grant_type=client_credentials'\n    }).then(tokenresponse => {\n      console.log(tokenresponse.request.status);\n\n      if (tokenresponse.request.status === 200) {\n        /* get new releases */\n        axios(`https://api.spotify.com/v1/browse/new-releases?country=${country}&offset=${offset}&limit=${limit}`, {\n          'method': 'GET',\n          'headers': {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': 'Bearer ' + tokenresponse.data.access_token\n          }\n        }).then(trackresponse => {\n          console.log(trackresponse);\n\n          if (trackresponse.request.status === 200) {\n            const tracks = trackresponse.data.albums.items;\n            this.setState({\n              newReleases: tracks\n            });\n          }\n        }).catch(error => console.log(error));\n        /* get featured playlist */\n\n        axios(`https://api.spotify.com/v1/browse/featured-playlists?country=${country}&locale=${locale}&timestamp=${timestamp}&limit=${limit}&offset=${offset}`, {\n          'method': 'GET',\n          'headers': {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': 'Bearer ' + tokenresponse.data.access_token\n          }\n        }).then(trackresponse => {\n          console.log(trackresponse.data.playlists.items);\n          const playlistsItems = trackresponse.data.playlists.items;\n          this.setState({\n            playlists: playlistsItems\n          });\n        }).catch(error => console.log(error));\n        /* get categories */\n\n        axios(`https://api.spotify.com/v1/browse/categories?country=${country}&locale=${locale}&timestamp=${timestamp}&limit=${limit}&offset=${offset}`, {\n          'method': 'GET',\n          'headers': {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': 'Bearer ' + tokenresponse.data.access_token\n          }\n        }).then(trackresponse => {\n          console.log(trackresponse.data.categories.items);\n          const categoriesItems = trackresponse.data.categories.items;\n          this.setState({\n            categories: categoriesItems\n          });\n        }).catch(error => console.log(error));\n      }\n    }).catch(error => console.log(error));\n  }\n\n  render() {\n    const {\n      newReleases,\n      playlists,\n      categories\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"discover\",\n      children: [/*#__PURE__*/_jsxDEV(DiscoverBlock, {\n        text: \"RELEASED THIS WEEK\",\n        id: \"released\",\n        data: newReleases\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DiscoverBlock, {\n        text: \"FEATURED PLAYLISTS\",\n        id: \"featured\",\n        data: playlists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DiscoverBlock, {\n        text: \"BROWSE\",\n        id: \"browse\",\n        data: categories,\n        imagesKey: \"icons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Anton/Downloads/react-coding-challenges-master/react-coding-challenges-master/spootify/src/routes/Discover/components/Discover.js"],"names":["React","Component","DiscoverBlock","axios","Discover","constructor","state","newReleases","playlists","categories","componentDidMount","country","offset","limit","locale","timestamp","Buffer","process","env","REACT_APP_SPOTIFY_CLIENT_ID","REACT_APP_SPOTIFY_CLIENT_SECRET","toString","data","then","tokenresponse","console","log","request","status","access_token","trackresponse","tracks","albums","items","setState","catch","error","playlistsItems","categoriesItems","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DiscoverBlock from './DiscoverBlock/components/DiscoverBlock';\nimport '../styles/_discover.scss';\nimport axios from 'axios';\n\nexport default class Discover extends Component {\n  \n  constructor() {\n    super();\n\n    this.state = {\n      newReleases: [],\n      playlists: [],\n      categories: []\n    };\n  }\n\n  componentDidMount(){\n  \n    const country = 'MX';\n    const offset= 1;\n    const limit = 20;\n    const locale = \"sv_MX\";\n    const timestamp = \"2021-10-23T09%3A00%3A00.000Z\";\n    /* get token for spotify api */\n    axios('https://accounts.spotify.com/api/token', {\n\t\t\t'method': 'POST',\n\t\t\t'headers': {\n\t\t\t\t 'Content-Type':'application/x-www-form-urlencoded',\n\t\t\t\t 'Authorization': 'Basic ' + (new Buffer( process.env.REACT_APP_SPOTIFY_CLIENT_ID + ':' + process.env.REACT_APP_SPOTIFY_CLIENT_SECRET).toString('base64')),\n\t\t\t},\n\t\t\tdata: 'grant_type=client_credentials'\n\t\t}).then(tokenresponse => {\n\t\t\tconsole.log(tokenresponse.request.status);\n      if(tokenresponse.request.status === 200){\n\n        /* get new releases */\n        axios(`https://api.spotify.com/v1/browse/new-releases?country=${country}&offset=${offset}&limit=${limit}`,{\n          'method': 'GET',\n          'headers': {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': 'Bearer ' + tokenresponse.data.access_token\n          }\n        }).then(trackresponse=> {\n          console.log(trackresponse);\n          if(trackresponse.request.status === 200){\n            const tracks = trackresponse.data.albums.items;\n            this.setState({newReleases: tracks });\n          }\n        }).catch(error=> console.log(error));\n\n        /* get featured playlist */\n        axios(`https://api.spotify.com/v1/browse/featured-playlists?country=${country}&locale=${locale}&timestamp=${timestamp}&limit=${limit}&offset=${offset}`,{\n          'method': 'GET',\n          'headers': {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': 'Bearer ' + tokenresponse.data.access_token\n          }\n        }).then(trackresponse=> {\n          console.log(trackresponse.data.playlists.items);\n          const playlistsItems = trackresponse.data.playlists.items;\n          this.setState({playlists: playlistsItems });\n        }).catch(error=> console.log(error));\n\n        /* get categories */\n        axios(`https://api.spotify.com/v1/browse/categories?country=${country}&locale=${locale}&timestamp=${timestamp}&limit=${limit}&offset=${offset}`,{\n          'method': 'GET',\n          'headers': {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': 'Bearer ' + tokenresponse.data.access_token\n          }\n        }).then(trackresponse=> {\n          console.log(trackresponse.data.categories.items);\n          const categoriesItems = trackresponse.data.categories.items;\n          this.setState({categories: categoriesItems });\n        }).catch(error=> console.log(error));\n\n      }\n\t\t\n\t\t}).catch(error => console.log(error));\n  }\n\n  render() {\n    const { newReleases, playlists, categories } = this.state;\n\n    return (\n      <div className=\"discover\">\n        <DiscoverBlock text=\"RELEASED THIS WEEK\" id=\"released\" data={newReleases} />\n        <DiscoverBlock text=\"FEATURED PLAYLISTS\" id=\"featured\" data={playlists} />\n        <DiscoverBlock text=\"BROWSE\" id=\"browse\" data={categories} imagesKey=\"icons\" />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}